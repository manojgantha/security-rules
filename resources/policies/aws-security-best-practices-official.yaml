id: b20bbeea-9a06-406b-a91c-9051b31fe001
refId: aws-security-best-practices-official
name:  AWS Security Best Practices Official
cloudProvider: AWS
description: >
  Source: https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html

  AWS Security Best Practices policy analyzes accounts for security best practices
  and is modelled on guidance published by the Center for Information Security.
enabled: true
ruleIds:
#  - Imported ACM certificates should be renewed after a specified time period # [ACM.1]
#  - API Gateway REST and WebSocket API logging should be enabled # [APIGateway.1]
#  - API Gateway REST API stages should be configured to use SSL certificates for backend authentication # [APIGateway.2]
#  - API Gateway REST API stages should have AWS X-Ray tracing enabled # [APIGateway.3]
#  - API Gateway should be associated with an AWS WAF web ACL # [APIGateway.4]
#  - API Gateway REST API cache data should be encrypted at rest # [APIGateway.5]
#  - Auto Scaling groups associated with a load balancer should use load balancer health checks # [AutoScaling.1]
#  - Amazon EC2 Auto Scaling group should cover multiple Availability Zones # [AutoScaling.2]
#  - Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses # [AutoScaling.5]
#  - CloudFront distributions should have a default root object configured # [CloudFront.1]
#  - CloudFront distributions should have origin access identity enabled # [CloudFront.2]
#  - CloudFront distributions should require encryption in transit # [CloudFront.3]
#  - CloudFront distributions should have origin failover configured # [CloudFront.4]
#  - CloudFront distributions should have logging enabled # [CloudFront.5]
#  - CloudFront distributions should have AWS WAF enabled # [CloudFront.6]
#  - CloudFront distributions should use custom SSL/TLS certificates # [CloudFront.7]
#  - CloudFront distributions should use SNI to serve HTTPS requests # [CloudFront.8]
#  - CloudFront distributions should encrypt traffic to custom origins # [CloudFront.9]
#  - CloudTrail should be enabled and configured with at  least one multi-Region trail that includes read and write management events # [CloudTrail.1]
#  - CloudTrail should have encryption at rest enabled # [CloudTrail.2]
#  - Ensure CloudTrail log file validation is enabled # [CloudTrail.4]
#  - Ensure CloudTrail trails are integrated with Amazon CloudWatch Logs # [CloudTrail.5]
#  - CodeBuild GitHub or Bitbucket source repository URLs should use OAuth # [CodeBuild.1]
#  - CodeBuild project environment variables should not contain clear text credentials # [CodeBuild.2]
#  - CodeBuild project environments should have a logging configuration # [CodeBuild.4]
#  - CodeBuild project environments should not have privileged mode enabled # [CodeBuild.5]
#  - AWS Config should be enabled # [Config.1]
#  - AWS Database Migration Service replication instances should not be public # [DMS.1]
#  - DynamoDB tables should automatically scale capacity with demand # [DynamoDB.1]
#  - DynamoDB tables should have point-in-time recovery enabled # [DynamoDB.2]
#  - DynamoDB Accelerator (DAX) clusters should be encrypted at rest # [DynamoDB.3]
#  - Amazon EBS snapshots should not be public, determined by the availability to be restorable by anyone # [EC2.1]
#  - The VPC default security group should not allow inbound and outbound traffic  # [EC2.2]
#  - Attached EBS volumes should be encrypted at rest # [EC2.3]
#  - Stopped EC2 instances should be removed after a specified time period # [EC2.4]
#  - VPC flow logging should be enabled in all VPCs  # [EC2.6]
#  - EBS default encryption should be enabled # [EC2.7]
#  - EC2 instances should use IMDSv2 # [EC2.8]
#  - EC2 instances should not have a public IP address # [EC2.9]
#  - Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service # [EC2.10]
#  - EC2 subnets should not automatically assign public IP addresses # [EC2.15]
#  - Unused network access control lists should be removed # [EC2.16]
#  - EC2 instances should not use multiple ENIs # [EC2.17]
#  - Security groups should only allow unrestricted incoming traffic for authorized ports # [EC2.18]
#  - Security groups should not allow unrestricted access to ports with high risk # [EC2.19]
#  - Both VPN tunnels for an AWS Site-to-Site VPN connection should be up # [EC2.20]
#  - Network ACLs should not allow ingress from 0.0.0.0/0 to port 22 or port 3389 # [EC2.21]
#  - Unused EC2 security groups should be removed # [EC2.22]
#  - ECR repositories should have at least one lifecycle policy configured # [ECR.3]
#  - Amazon ECS task definitions should have secure networking modes and user definitions # [ECS.1]
#  - Amazon ECS services should not have public IP addresses assigned to them automatically # [ECS.2]
#  - Amazon EFS should be configured to encrypt file data at rest using AWS KMS # [EFS.1]
#  - Amazon EFS volumes should be in backup plans # [EFS.2]
#  - Elastic Beanstalk environments should have enhanced health reporting enabled # [ElasticBeanstalk.1]
#  - Elastic Beanstalk managed platform updates should be enabled # [ElasticBeanstalk.2]
#  - Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager # [ELB.2]
#  - Classic Load Balancer listeners should be configured with HTTPS or TLS termination # [ELB.3]
#  - Application load balancers should be configured to drop HTTP headers # [ELB.4]
#  - Application and Classic Load Balancers logging should be enabled # [ELB.5]
#  - Application Load Balancer deletion protection should be enabled # [ELB.6]
#  - Classic Load Balancers should have connection draining enabled # [ELB.7]
#  - Classic Load Balancers with HTTPS/SSL listeners should use a predefined security policy that has strong configuration # [ELB.8]
#  - Classic Load Balancers should have cross-zone load balancing enabled # [ELB.9]
#  - Classic Load Balancers should span multiple Availability Zones # [ELB.10]
#  - Application Load Balancer should be configured to redirect all HTTP requests to HTTPS # [ELBv2.1]
#  - Amazon EMR cluster master nodes should not have public IP addresses # [EMR.1]
#  - Elasticsearch domains should have encryption at rest enabled # [ES.1]
#  - Elasticsearch domains should be in a VPC # [ES.2]
#  - Elasticsearch domains should encrypt data sent between nodes # [ES.3]
#  - Elasticsearch domain error logging to CloudWatch Logs should be enabled # [ES.4]
#  - Elasticsearch domains should have audit logging enabled # [ES.5]
#  - Elasticsearch domains should have at least three data nodes # [ES.6]
#  - Elasticsearch domains should be configured with at least three dedicated master nodes # [ES.7]
#  - Connections to Elasticsearch domains should be encrypted using TLS 1.2 # [ES.8]
#  - GuardDuty should be enabled # [GuardDuty.1]
#  - IAM policies should not allow full "*" administrative privileges # [IAM.1]
#  - IAM users should not have IAM policies attached # [IAM.2]
#  - IAM users' access keys should be rotated every 90 days or less # [IAM.3]
#  - IAM root user access key should not exist # [IAM.4]
#  - MFA should be enabled for all IAM users that have a console password # [IAM.5]
#  - Hardware MFA should be enabled for the root user # [IAM.6]
#  - Password policies for IAM users should have strong configurations # [IAM.7]
#  - Unused IAM user credentials should be removed # [IAM.8]
#  - IAM customer managed policies that you create should not allow wildcard actions for services # [IAM.21]
#  - IAM customer managed policies should not allow decryption and re-encryption actions on all KMS keys # [KMS.1]
#  - IAM principals should not have IAM inline policies that allow decryption and re-encryption actions on all KMS keys  # [KMS.2]
#  - AWS KMS keys should not be unintentionally deleted # [KMS.3]
#  - Lambda function policies should prohibit public access # [Lambda.1]
#  - Lambda functions should use supported runtimes # [Lambda.2]
#  - Lambda functions should have a dead-letter queue configured (Retired) # [Lambda.4]
#  - VPC Lambda functions should operate in more than one Availability Zone # [Lambda.5]
#  - Stateless network firewall rule group should not be empty # [NetworkFirewall.6]
#  - OpenSearch domains should have encryption at rest enabled # [OpenSearch.1 ]
#  - OpenSearch should be in a VPC # [OpenSearch.2]
#  - OpenSearch domains should encrypt data sent between nodes # [OpenSearch.3]
#  - OpenSearch domain error logging to CloudWatch Logs should be enabled # [OpenSearch.4]
#  - OpenSearch domains should have audit logging enabled # [OpenSearch.5]
#  - OpenSearch domains should have at least three data nodes # [OpenSearch.6]
#  - Connections to OpenSearch domains should be encrypted using TLS 1.2 # [OpenSearch.8]
#  - RDS snapshots should be private # [RDS.1]
#  - Amazon RDS DB instances should prohibit public access, determined by the PubliclyAccessible configuration # [RDS.2]
#  - RDS DB instances should have encryption at rest enabled # [RDS.3]
#  - RDS cluster snapshots and database snapshots should be encrypted at rest # [RDS.4]
#  - RDS DB instances should be configured with multiple Availability Zones # [RDS.5]
#  - Enhanced monitoring should be configured for RDS DB instances and clusters # [RDS.6]
#  - RDS clusters should have deletion protection enabled # [RDS.7]
#  - RDS DB instances should have deletion protection enabled # [RDS.8]
#  - Database logging should be enabled # [RDS.9]
#  - IAM authentication should be configured for RDS instances # [RDS.10]
#  - Amazon RDS instances should have automatic backups enabled # [RDS.11]
#  - IAM authentication should be configured for RDS clusters # [RDS.12]
#  - RDS automatic minor version upgrades should be enabled # [RDS.13]
#  - Amazon Aurora clusters should have backtracking enabled # [RDS.14]
#  - RDS DB clusters should be configured for multiple Availability Zones # [RDS.15]
#  - RDS DB clusters should be configured to copy tags to snapshots # [RDS.16]
#  - RDS DB instances should be configured to copy tags to snapshots # [RDS.17]
#  - RDS instances should be deployed in a VPC # [RDS.18]
#  - An RDS event notifications subscription should be configured for critical cluster events # [RDS.19]
#  - An RDS event notifications subscription should be configured for critical database instance events # [RDS.20]
#  - An RDS event notifications subscription should be configured for critical database parameter group events # [RDS.21]
#  - An RDS event notifications subscription should be configured for critical database security group events # [RDS.22]
#  - RDS databases and clusters should not use a database engine default port # [RDS.23]
#  - RDS database clusters should use a custom administrator username # [RDS.24]
#  - RDS database instances should use a custom administrator username # [RDS.25]
#  - Amazon Redshift clusters should prohibit public access # [Redshift.1]
#  - Connections to Amazon Redshift clusters should be encrypted in transit # [Redshift.2]
#  - Amazon Redshift clusters should have automatic snapshots enabled # [Redshift.3]
#  - Amazon Redshift clusters should have audit logging enabled # [Redshift.4]
#  - Amazon Redshift should have automatic upgrades to major versions enabled # [Redshift.6]
#  - Amazon Redshift clusters should use enhanced VPC routing # [Redshift.7]
#  - Amazon Redshift clusters should not use the default Admin username # [Redshift.8]
#  - S3 Block Public Access setting should be enabled # [S3.1]
#  - S3 buckets should prohibit public read access # [S3.2]
#  - S3 buckets should prohibit public write access # [S3.3]
#  - S3 buckets should have server-side encryption enabled # [S3.4]
#  - S3 buckets should require requests to use Secure Socket Layer # [S3.5]
#  - Amazon S3 permissions granted to other AWS accounts in bucket policies should be restricted # [S3.6]
#  - S3 Block Public Access setting should be enabled at the bucket level # [S3.8]
#  - S3 bucket server access logging should be enabled # [S3.9]
#  - S3 buckets with versioning enabled should have lifecycle policies configured # [S3.10]
#  - S3 buckets should have event notifications enabled # [S3.11]
#  - S3 access control lists (ACLs) should not be used to manage user access to buckets # [S3.12]
#  - SageMaker notebook instances should not have direct internet access # [SageMaker.1]
#  - Secrets Manager secrets should have automatic rotation enabled # [SecretsManager.1]
#  - Secrets Manager secrets configured with automatic rotation should rotate successfully # [SecretsManager.2]
#  - Remove unused Secrets Manager secrets # [SecretsManager.3]
#  - Secrets Manager secrets should be rotated within a specified number of days # [SecretsManager.4]
#  - SNS topics should be encrypted at rest using AWS KMS # [SNS.1]
#  - Amazon SQS queues should be encrypted at rest # [SQS.1]
#  - EC2 instances should be managed by AWS Systems Manager # [SSM.1]
#  - All EC2 instances managed by Systems Manager should be compliant with patching requirements # [SSM.2]
#  - Instances managed by Systems Manager should have an association compliance status of COMPLIANT # [SSM.3]
#  - SSM documents should not be public # [SSM.4]
#  - AWS WAF Classic global web ACL logging should be enabled # [WAF.1]